<project name="org.LTR4L-project"
         xmlns:ivy="antlib:org.apache.ivy.ant"
         xmlns:jacoco="antlib:org.jacoco.ant"
         default="compile" basedir=".">

    <property name="src.dir" value="src"/>
    <property name="cls.dir" value="classes"/>
    <property name="lib.dir" value="lib"/>
    <property name="test.result.dir" value="test-result"/>
    <property name="conf.dir" value="confs"/>
    <property name="jacoco.report.dir" value="jacoco-report"/>
    <property name="jacoco.version" value="0.8.0"/>
    <property name="doc.dir" value="javadocs"/>

    <property name="PRODUCT_NAME" value="LTR4L"/>
    <property name="PRODUCT_VERSION" value="0.1-dev"/>
    <property name="product.jar" value="${PRODUCT_NAME}-${PRODUCT_VERSION}.jar"/>

    <target name="compile" description="compile source and test code">
        <mkdir dir="${cls.dir}"/>
        <javac srcdir="${src.dir}/main/java" destdir="${cls.dir}" debug="on" includes="**/*.java">
            <classpath path="${cls.dir}"/>
            <classpath>
                <fileset dir="${lib.dir}" includes="**/*.jar"/>
            </classpath>
        </javac>
        <javac srcdir="${src.dir}/test/java" destdir="${cls.dir}" debug="on" includes="**/*Test.java">
            <classpath path="${cls.dir}"/>
            <classpath>
                <fileset dir="${lib.dir}" includes="**/*.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="jacoco-install" depends="jacoco-check" unless="jacocoant.exists">
        <get src="https://github.com/jacoco/jacoco/releases/download/v${jacoco.version}/jacoco-${jacoco.version}.zip" dest="${lib.dir}"/>
        <unzip src="${lib.dir}/jacoco-${jacoco.version}.zip" dest="${lib.dir}/jacoco-${jacoco.version}"/>
        <move todir="${lib.dir}">
            <fileset dir="${lib.dir}/jacoco-${jacoco.version}/lib">
                <include name="*.jar"/>
            </fileset>
        </move>
        <delete dir="${lib.dir}/jacoco-${jacoco.version}"/>
        <delete file="${lib.dir}/jacoco-${jacoco.version}.zip"/>
    </target>

    <target name="jacoco-check">
        <available property = "jacocoant.exists" file = "${lib.dir}/jacocoant.jar"/>
    </target>

    <target name="test" depends="compile,jacoco-install" description="run all tests">
        <mkdir dir="${test.result.dir}"/>
        <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
            <classpath path="${lib.dir}/jacocoant.jar"/>
        </taskdef>
        <jacoco:coverage destfile="${jacoco.report.dir}/jacoco-report">
            <junit fork="true" forkmode="once" printsummary="on"
                   haltonfailure="no"
                   errorProperty="tests.failed"
                   failureProperty="tests.failed">
                <classpath path="${cls.dir}"/>
                <classpath>
                    <fileset dir="${lib.dir}" includes="**/*.jar"/>
                </classpath>
                <jvmarg value="-ea"/>
                <formatter type="plain"/>
                <batchtest fork="true" todir="${test.result.dir}">
                    <fileset dir="${src.dir}/test/java" includes="**/*Test.java"/>
                </batchtest>
            </junit>
        </jacoco:coverage>
        <fail if="tests.failed">***** Tests failed! *****</fail>

        <jacoco:report>
            <executiondata>
                <file file="${jacoco.report.dir}/jacoco-report"/>
            </executiondata>

            <structure name="jacoco coverage report">
                <classfiles>
                    <fileset dir="${cls.dir}"/>
                </classfiles>
                <sourcefiles encoding="UTF-8">
                    <fileset dir="${src.dir}/main/java"/>
                </sourcefiles>
            </structure>
            <html destdir="${jacoco.report.dir}/coverage-report"/>
        </jacoco:report>
    </target>

    <target name="jar" depends="compile" description="make jar file">
        <jar destfile="${product.jar}" basedir="${cls.dir}">
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Main-Class" value="org.ltr4l.Main"/>
            </manifest>
        </jar>
    </target>

    <target name="package" depends="jar" description="make package"/>

    <target name="run" depends="compile" description="run Main program">
        <property name="algo" value="ranknet"/>
        <property name="train" value="data/MQ2008/Fold1/train.txt"/>
        <property name="valid" value="data/MQ2008/Fold1/vali.txt"/>
        <java classname="org.ltr4l.Main">
            <arg line="${algo} ${train} ${valid} ${conf.dir}/${algo}.json"/>
            <classpath path="${cls.dir}"/>
            <classpath>
                <fileset dir="${lib.dir}" includes="**/*.jar"/>
            </classpath>
        </java>
    </target>

    <target name="clean" description="clean all">
        <delete dir="${cls.dir}"/>
        <delete dir="${test.result.dir}"/>
        <delete>
            <fileset dir="." includes="${product.jar}"/>
        </delete>
    </target>

    <target name="ivy-bootstrap" description="--> retrieve dependencies with ivy">
        <ivy:retrieve />
<!--
        <ivy:retrieve sync="true" type="jar" />
-->
    </target>

    <target name="javadoc" description="generate documentation">
        <javadoc sourcepath="${src.dir}/main/java" destdir="${doc.dir}" locale="en_US"/>
    </target>
    
</project>
